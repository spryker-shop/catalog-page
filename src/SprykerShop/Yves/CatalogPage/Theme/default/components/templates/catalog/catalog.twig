{% extends template('layout-main') %}

{% set products = products | default(_view.products) %}
{% set category = category | default(_view.category) %}
{% set categoryId = categoryId | default(_view.idCategory) %}
{% set searchString = searchString | default(_view.searchString) %}
{% set paginationPath = paginationPath | default(app.request.getPathInfo()) %}

{% set metaTitle = metaTitle | default(_view.pageTitle | default(null)) %}
{% set metaDescription = metaDescription | default(_view.pageDescription | default(null)) %}
{% set metaKeywords = metaKeywords | default(_view.pageKeywords | default(null)) %}
{% set headTitle = headTitle | default(_view.category.name | default(null)) %}
{% set viewMode = viewMode | default(_view.viewMode | default(null)) %}

{% macro renderBreadcrumbSteps(categoryNode, filterPath) %}
    {% import _self as self %}
    {% set categoryUrl = filterPath is not empty ? url(filterPath, {categoryPath: (categoryNode.url)}) : categoryNode.url %}
    {% set categoryLabel = categoryNode.name %}
    {% set categoryPatrentNodes = categoryNode.parents | default(null) %}

    {% if categoryPatrentNodes is not empty %}
        {{ self.renderBreadcrumbSteps(categoryPatrentNodes | first, filterPath) }}
        
        {% include molecule('breadcrumb-step') with {
            data: {
                url: categoryUrl,
                label: categoryLabel
            }
        } only %}
    {% endif %}
{% endmacro %}

{% block breadcrumbs %}
    {% import _self as self %}
    
    {% embed molecule('breadcrumb') with {
        breadcrumbs: self.renderBreadcrumbSteps(category)
    } only %}
        {% block breadcrumbs %}
            {{ breadcrumbs }}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block title %}
    <h3>{{ headTitle }}</h3>
{% endblock %}

{% block content %}
    {% block topCmsBlock %}
        {% if categoryId %}
            <div class="box">
                {{ widgetBlock('CatalogCmsBlockWidgetPlugin', 'top', categoryId) }}
            </div>
        {% endif %}
    {% endblock %}

    <form method="GET" data-component="catalog-filter-form">
        <div class="grid">

            {# {% include '@CatalogPage/_partials/spelling-suggestion.twig' %} #}

            <div class="col col--sm-12 col--lg-4 col--xl-3">
                <div class="box is-hidden-sm-md">
                    {% include molecule('view-mode-switch') only %}
                </div>

                {# <input id="catalog-filters" type="checkbox" class="__toggler __no-margin-bottom hide" checked> #}

                {# <div class="callout hide-for-large">
                    <label for="catalog-filters" class="button hollow expanded __no-margin-bottom">
                        <i class="fa fa-filter"></i> Show/Hide filters
                    </label>
                </div> #}

                {% include organism('filter-section') with {
                    data: {
                        filterPath: _view.filterPath | default(null),
                        facets: _view.facets,
                        categories: categories
                    }
                } only %}

                {% block middleCmsBlock %}
                    {% if categoryId %}
                        <div class="box">
                            {{ widgetBlock('CatalogCmsBlockWidgetPlugin', 'middle', categoryId) }}
                        </div>
                    {% endif %}
                {% endblock %}

                <div class="box is-hidden-lg-xl">
                    {% include molecule('view-mode-switch') only %}
                </div>
            </div>

            <div class="col col--sm-12 col--lg-8 col--xl-9">
                {# {% include '@CatalogPage/_partials/sort.twig' %} #}

                {% include organism('active-filter-section') with {
                    data: {
                        facets: _view.facets
                    }
                } only %}

                <div class="box text-center">
                    {% include organism('pagination') with {
                        data: {
                            parameters: app.request.query.all(),
                            currentPage: _view.pagination.currentPage,
                            paginationPath: paginationPath,
                            maxPage: _view.pagination.maxPage,
                            showAlwaysFirstAndLast: true
                        }
                    } only %}
                </div>

                <div class="grid grid--stretch">
                    {% for product in products %}
                        {{ widget('ProductWidgetPlugin', product, viewMode) }}
                    {% endfor %}
                </div>

                <div class="box text-center">
                    {% include organism('pagination') with {
                        data: {
                            parameters: app.request.query.all(),
                            currentPage: _view.pagination.currentPage,
                            paginationPath: paginationPath,
                            maxPage: _view.pagination.maxPage,
                            showAlwaysFirstAndLast: true
                        }
                    } only %}
                </div>
            </div>
        </div>

        {% if searchString is not empty %}
            <input type="hidden" name="q" value="{{ searchString }}" />
        {% endif %}
    </form>

    {% block cmsBottomCmsBlock %}
        {% if categoryId %}
            <div class="box">
                {{ widgetBlock('CatalogCmsBlockWidgetPlugin', 'bottom', categoryId) }}
            </div>
        {% endif %}
    {% endblock %}
{% endblock %}
